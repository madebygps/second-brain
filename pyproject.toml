[project]
name = "second-brain"
version = "0.1.0"
description = "AI-powered journaling with smart prompts and automatic backlinks"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    { name = "Gwyneth PeÃ±a-Siguenza", email = "gwyneth@madebygps.com" }
]
license = { text = "MIT" }
keywords = ["journaling", "AI", "productivity", "planning", "obsidian", "azure-openai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business",
    "Topic :: Utilities",
]
dependencies = [
    "typer>=0.15.1",
    "rich>=13.9.4",
    "python-dotenv>=1.0.1",
    "httpx>=0.28.1",
    "openai>=1.57.2",
]

[project.urls]
Homepage = "https://github.com/madebygps/second-brain"
"Bug Tracker" = "https://github.com/madebygps/second-brain/issues"
Documentation = "https://github.com/madebygps/second-brain#readme"
"Source Code" = "https://github.com/madebygps/second-brain"

[project.scripts]
brain = "brain_cli.main:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["brain_core", "brain_cli"]

[tool.hatch.build.targets.sdist]
# Only include essential files in source distribution
include = [
    "/brain_core",
    "/brain_cli",
    "/tests",
    "/LICENSE",
    "/README.md",
    "/pyproject.toml",
    "/.env.example",
]

[tool.uv]
package = true

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "ruff>=0.14.0",
]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
# Enable carefully selected rule sets for personal project
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "UP",  # pyupgrade (modernize Python code)
]

# Ignore rules that are too strict for personal project
ignore = [
    "E501",  # Line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
# Tests can use assert
"tests/**/*.py" = ["S101"]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces
indent-style = "space"

# Respect magic trailing comma
skip-magic-trailing-comma = false
